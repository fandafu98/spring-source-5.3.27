plugins {
    id 'war'
    id 'java'
}

group 'org.springframework'
version '5.3.27'

repositories {
    mavenCentral()
    mavenCentral()
}

/*dependencies {
    testImplementation 'junit:junit:4.11'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}*/

dependencies {
    api(project(":spring-core"))
    optional(project(":spring-aop"))
    optional(project(":spring-beans"))
    optional(project(":spring-context"))
    optional(project(":spring-jdbc"))
    optional(project(":spring-orm"))
    optional(project(":spring-tx"))
    optional(project(":spring-web"))
    optional(project(":spring-webflux"))
    optional(project(":spring-webmvc"))
    optional(project(":spring-websocket"))
    optional("javax.activation:javax.activation-api")
    optional("javax.el:javax.el-api")
    optional("javax.inject:javax.inject")
    optional("javax.servlet:javax.servlet-api")
    optional("javax.servlet.jsp:javax.servlet.jsp-api")
    optional("javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api")
    optional("javax.xml.bind:jaxb-api")
    optional("javax.websocket:javax.websocket-api")
    optional("junit:junit")
    optional("org.junit.jupiter:junit-jupiter-api")
    optional("org.testng:testng")
    optional("org.aspectj:aspectjweaver")
    optional("org.codehaus.groovy:groovy")
    optional("org.hamcrest:hamcrest")
    optional("org.apache.taglibs:taglibs-standard-jstlel")
    optional("net.sourceforge.htmlunit:htmlunit")
    optional("org.seleniumhq.selenium:htmlunit-driver") {
        exclude group: "net.bytebuddy", module: "byte-buddy"
    }
    optional("org.seleniumhq.selenium:selenium-java") {
        exclude group: "net.bytebuddy", module: "byte-buddy"
    }
    optional("org.xmlunit:xmlunit-matchers")
    optional("org.skyscreamer:jsonassert")
    optional("com.jayway.jsonpath:json-path")
    optional("commons-fileupload:commons-fileupload")
    optional("org.jetbrains.kotlin:kotlin-reflect")
    optional("org.jetbrains.kotlin:kotlin-stdlib")
    optional("io.projectreactor:reactor-test")
    optional("org.jetbrains.kotlinx:kotlinx-coroutines-core")
    optional("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")
    implementation(project(":spring-context-support"))
    implementation(project(":spring-oxm"))
    implementation((project(":spring-beans")))
    implementation((project(":spring-context")))
    implementation((project(":spring-core")))
    implementation((project(":spring-tx")))
    implementation((project(":spring-web")))
    implementation("javax.annotation:javax.annotation-api")
    implementation("javax.cache:cache-api")
    implementation("javax.ejb:javax.ejb-api")
    implementation("javax.interceptor:javax.interceptor-api")
    implementation("javax.mail:javax.mail-api")
    implementation("org.hibernate:hibernate-core")
    implementation("org.hibernate:hibernate-validator")
    implementation("javax.validation:validation-api")
    implementation("org.junit.platform:junit-platform-testkit")
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("com.thoughtworks.xstream:xstream")
    implementation("com.rometools:rome")
    implementation("org.apache.tiles:tiles-api")
    implementation("org.apache.tiles:tiles-core")
    implementation("org.apache.tiles:tiles-servlet")
    implementation("org.hsqldb:hsqldb")
    implementation("org.apache.httpcomponents:httpclient")
    implementation("io.projectreactor.netty:reactor-netty-http")
    implementation("de.bechte.junit:junit-hierarchicalcontextrunner")
    implementation 'org.projectlombok:lombok:1.18.26'
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
        exclude group: "junit", module: "junit"
    }
    testRuntimeOnly("org.junit.support:testng-engine")
    testRuntimeOnly("org.glassfish:javax.el")
    testRuntimeOnly("com.sun.xml.bind:jaxb-core")
    testRuntimeOnly("com.sun.xml.bind:jaxb-impl")
    implementation ('mysql:mysql-connector-java:8.0.28')
    implementation ('com.alibaba:druid:1.2.18')
}


test {
    useJUnitPlatform()
}